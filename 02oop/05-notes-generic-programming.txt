
1. What is generic programming?
2. Why is it called an alternative to inheritance?
3. When should we use inheritance? When should we use templates?
4. How does generic programming work in c++?

===================================================================

1. What is generic programming?

  Generic programming is a style of computer programming in which algorithms are written in terms of types to-be-specified later. This permits writing common functions or types that differ only in the set of types on which they operate, thus reducing code reduplication.

===================================================================

2. Why is it called an alternative to inheritance?

  - if you don't want to organize your classes in a heirarchy, you can use generic programming instead.

===================================================================

3. When should we use inheritance? When should we use templates?

  here's the stack overflow answer. elegant.

  

The way I see it is that templates and inheritance are literally orthogonal concepts: Inheritance is "vertical" and goes down, from the abstract to the more and more concrete. A shape, a triange, an equilateral triangle.

Templates on the other hand are "horizontal" and define parallel instances of code that knowns nothing of each other. Sorting integers is formally the same as sorting doubles and sorting strings, but those are three entirely different functions. They all "look" the same from afar, but they have nothing to do with each other.

Inheritance provides runtime abstraction. Templates are code generation tools.

Because the concepts are orthogonal, they may happily be used together to work towards a common goal. My favourite example of this is type erasure, in which the type-erasing container contains a virtual base pointer to an implementation class, but there are arbitrarily many concrete implementations that are generated by a template derived class. Template code generation serves to fill an inheritance hierarchy. Magic.


===================================================================

4. How does generic programming work in c++?

  In c++, generic programming is enabled by templates.

  In c++, there are:
  1. function templates
  2. class templates


####

Bjarne says the template interface to date has been "pretty lousy" because you can't specify the requirements of the types.

C++20 will have something called "concepts" which will require the programmer to specify requirments on its occupants.

